apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns-edge-cm
  namespace: aiedge
data:
  Corefile: |
    .:53 {
        errors
        health {
          lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          endpoint http://127.0.0.1:10550
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . 223.5.5.5 {
          max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: coredns-edge
  namespace: aiedge
  labels:
    aiedge/component: ""
spec:
  selector:
    matchLabels:
      app: coredns-edge
  template:
    metadata:
      labels:
        app: coredns-edge
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                  - key: node-role.kubernetes.io/edge
                    operator: Exists
      hostNetwork: true
      volumes:
        - name: config-volume
          configMap:
            name: coredns-edge-cm
            items:
            - key: Corefile
              path: Corefile
      imagePullSecrets:
        - name: registry-pull-secret
      containers:
        - name: coredns-edge
          image: "{{AIEDGE_IMAGE_REGISTRY}}/aiedge/coredns:aiedge-1.7.1"
          imagePullPolicy: Always
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          args: [ "-conf", "/etc/coredns/Corefile" ]
          volumeMounts:
          - name: config-volume
            mountPath: /etc/coredns
            readOnly: true
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: coredns-edge-arm64
  namespace: aiedge
  labels:
    aiedge/component: ""
spec:
  selector:
    matchLabels:
      app: coredns-edge-arm64
  template:
    metadata:
      labels:
        app: coredns-edge-arm64
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - arm64
                  - key: node-role.kubernetes.io/edge
                    operator: Exists
      hostNetwork: true
      volumes:
        - name: config-volume
          configMap:
            name: coredns-edge-cm
            items:
            - key: Corefile
              path: Corefile
      imagePullSecrets:
        - name: registry-pull-secret
      containers:
        - name: coredns-edge
          image: "{{AIEDGE_IMAGE_REGISTRY}}/aiedge/coredns-arm64:aiedge-1.7.1"
          imagePullPolicy: Always
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          args: [ "-conf", "/etc/coredns/Corefile" ]
          securityContext:
            privileged: true
          volumeMounts:
          - name: config-volume
            mountPath: /etc/coredns
            readOnly: true


